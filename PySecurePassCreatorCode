# Function utilizing Password file in .txt in same directory reading line by line
def read_password_file(file_path):
    with open(file_path) as file:
        return [line.strip() for line in file.readlines()]

# Password Complexity requirements/conditions
def check_complexity(word, commonWords):
    if len(word) < 8:
        print("\n * Make your password at least 8 characters long.")

    if not any(char.isdigit() for char in word):
        print("\n * Include at least one digit in your password.")

    if not any(char.isupper() for char in word):
        print("\n * Include at least one uppercase letter in your password.")

    special_characters = "!@#$%^&*()-_=+[]{}|;:,.<>?/"
    if not any(char in special_characters for char in word):
        print("\n * Include at least one of these special characters: ","such as !@#$%^&*()-_=+[]{}|;:,.<>?/")

    if word in commonWords:
        print("\n * Avoid using the exact phrase", word, "which is listed among the 10 million top worst passwords.")

    # If all conditions satisfied then tell user that it is secure
    if len(word) >= 8 and \
            any(char.isdigit() for char in word) and \
            any(char.isupper() for char in word) and \
            any(char in special_characters for char in word) and \
            not word in commonWords:
        print("\nCongrats! You created Secure Password")

# Define main
def main():
    # Counter
    count = 0
    # Password file containing a list of 10 million top passwords used
    file_path = "10-million-password-list-top-1000000.txt"
    #read file
    common_passfile = read_password_file(file_path)
    print(
        "\n * Important: This tool will check to see if you passwords are meet secure complexity requirements and harder for attacker to brute force. This tool is safe since your inputted information will be locally stored on your computer. \n Have Fun ;) \n -Created by TerminalTinker")
    # Only runs unless user types 'exit'
    while True:
        # Increment
        count += 1
        print("\n-------------------------------------------------------------------------------------")
        print("\nPassword Attempt #", count)
        user_input = input("\nPlease enter a password check if secure (or type 'exit'): ")

        # Check for the exact phrase first
        if user_input in common_passfile:
            print("AT RISK: Your entered password is one of the the 10 million worst passwords. Please create a different password.")
        else:
            check_complexity(user_input, common_passfile)

        # Break if user inputs 'exit'
        if user_input.lower() == 'exit':
            break

# Call the main function
main()
